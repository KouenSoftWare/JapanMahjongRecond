# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import models, migrations


class Migration(migrations.Migration):

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BanZhuang',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('banZhuangID', models.CharField(max_length=30)),
                ('playerA', models.CharField(max_length=30)),
                ('playerB', models.CharField(max_length=30)),
                ('playerC', models.CharField(max_length=30)),
                ('playerD', models.CharField(max_length=30)),
                ('date', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='DuiJu',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('duiJuID', models.CharField(max_length=30)),
                ('banZhuangID', models.CharField(max_length=30)),
                ('changkuang', models.IntegerField()),
                ('liuju', models.BooleanField()),
                ('lianZhuangShu', models.IntegerField()),
                ('playerAname', models.CharField(max_length=30)),
                ('playerAcurrentPoint', models.IntegerField()),
                ('playerAcurrentFanShu', models.IntegerField()),
                ('playerAcurrentFuShu', models.IntegerField()),
                ('playerAfinishPoint', models.IntegerField()),
                ('playerAhl', models.BooleanField()),
                ('playerAzm', models.BooleanField()),
                ('playerAfc', models.BooleanField()),
                ('playerAtq', models.BooleanField()),
                ('playerAlz', models.BooleanField()),
                ('playerAzj', models.BooleanField()),
                ('playerAfl', models.BooleanField()),
                ('playerAtp', models.BooleanField()),
                ('playerBname', models.CharField(max_length=30)),
                ('playerBcurrentPoint', models.IntegerField()),
                ('playerBcurrentFanShu', models.IntegerField()),
                ('playerBcurrentFuShu', models.IntegerField()),
                ('playerBfinishPoint', models.IntegerField()),
                ('playerBhl', models.BooleanField()),
                ('playerBzm', models.BooleanField()),
                ('playerBfc', models.BooleanField()),
                ('playerBtq', models.BooleanField()),
                ('playerBlz', models.BooleanField()),
                ('playerBzj', models.BooleanField()),
                ('playerBfl', models.BooleanField()),
                ('playerBtp', models.BooleanField()),
                ('playerCname', models.CharField(max_length=30)),
                ('playerCcurrentPoint', models.IntegerField()),
                ('playerCcurrentFanShu', models.IntegerField()),
                ('playerCcurrentFuShu', models.IntegerField()),
                ('playerCfinishPoint', models.IntegerField()),
                ('playerChl', models.BooleanField()),
                ('playerCzm', models.BooleanField()),
                ('playerCfc', models.BooleanField()),
                ('playerCtq', models.BooleanField()),
                ('playerClz', models.BooleanField()),
                ('playerCzj', models.BooleanField()),
                ('playerCfl', models.BooleanField()),
                ('playerCtp', models.BooleanField()),
                ('playerDname', models.CharField(max_length=30)),
                ('playerDcurrentPoint', models.IntegerField()),
                ('playerDcurrentFanShu', models.IntegerField()),
                ('playerDcurrentFuShu', models.IntegerField()),
                ('playerDfinishPoint', models.IntegerField()),
                ('playerDhl', models.BooleanField()),
                ('playerDzm', models.BooleanField()),
                ('playerDfc', models.BooleanField()),
                ('playerDtq', models.BooleanField()),
                ('playerDlz', models.BooleanField()),
                ('playerDzj', models.BooleanField()),
                ('playerDfl', models.BooleanField()),
                ('playerDtp', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='Level',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('ptMax', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='PlayerDate',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(max_length=30)),
                ('level', models.IntegerField()),
                ('pt', models.IntegerField()),
                ('rank', models.IntegerField()),
                ('gameAllCount', models.IntegerField()),
                ('bzAllCount', models.IntegerField()),
                ('winAllCount', models.IntegerField()),
                ('winAC_ratio', models.FloatField()),
                ('loseAllCount', models.IntegerField()),
                ('lAC_ratio', models.FloatField()),
                ('fuluAllCount', models.IntegerField()),
                ('flAC_ratio', models.FloatField()),
                ('lizhiAllCount', models.IntegerField()),
                ('lzAC_ratio', models.FloatField()),
                ('tingpaiAllCount', models.FloatField()),
                ('tpAC_ratio', models.FloatField()),
                ('top_allCount', models.IntegerField()),
                ('top_ratio', models.FloatField()),
                ('second_allCount', models.IntegerField()),
                ('second_ratio', models.FloatField()),
                ('three_allCount', models.IntegerField()),
                ('three_ratio', models.FloatField()),
                ('four_allCount', models.IntegerField()),
                ('four_ratio', models.FloatField()),
                ('fly_allCount', models.IntegerField()),
                ('fly_ratio', models.FloatField()),
                ('avgWinPoint', models.FloatField()),
                ('avgLosePoint', models.FloatField()),
                ('winPoint_allCount', models.FloatField()),
                ('losePoint_allCount', models.FloatField()),
            ],
        ),
    ]
